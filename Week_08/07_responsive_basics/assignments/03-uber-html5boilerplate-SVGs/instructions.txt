Ok, so you're starting to feel like a real programmer and responsive design looks pretty easy right? Well, try out a real world example.

Take a look at uber.com. We're targeting the second section of the page (as of 2018-01-03) - just try and remake what you see there. I've taken screenshots of what's going on and put them into the 'goal' folder of this assignment if they change their site.

Here's what you should do:

-Try using html5boilerplate.com as a base for the site and make sense of what's going on with this template. Take note of the <head> in the document, especially the <meta> tag dealing with the viewport. This is how you tell the browser to match the content to the device browsing it, instead of forcing a desktop site on a mobile user.

-Remember what we just learned about responsive design: mobile first, how to construct a media query, etc.

-Include the images you see on the Uber site as inline SVGs on this project (if Uber gets ride of them, I put them into the `SVGs` folder in this project). Don't remotely load the SVGs like you would images, you lose their beneficial aspects that way. We haven't seen SVGs yet so take a little time and learn about them. They are scalable graphics that are super efficient because they are just code. Poke around on DevTools and see what you see.

-Match the mobile-first breakpoints Uber is using:
  545px for mobiles
  768px for tablets

-Think about how this layout will work. Draw it out if you have to. Try to use flexbox if you can, float will work too though. Remember you can do flex inside of flex, you'll need it for this layout.

-Also think about the flow of the content and why what they've done looks so good. All the content is the same size! Something to consider for your next project.

-Don't worry about matching the font - it's custom and $$$.
